---
- hosts: all
  become: yes
  tasks:
    - name: allow 'samcaldwell' to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'samcaldwell ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: rename host
      hostname:
        name: "{{ hostname }}"

    - name: check for a swap file (0/3)
      stat:
        path: /swap.img
      register: swap_file_exists

    - name: Disable SWAP since kubernetes can't work with swap enabled (1/3)
      shell: |
        swapoff -a
      when: swap_file_exists.stat.exists == true

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/3)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
      when: swap_file_exists.stat.exists == true

    - name: Remove the swap file (3/3)
      file:
        path: /swap.img
        state: absent

    - name: set up authorized keys for the ubuntu user
      authorized_key: user=ubuntu key="{{item}}"
      with_file:
        - ~/.ssh/id_rsa.pub
    - name: create Docker config directory
      file: path=/etc/docker state=directory

    - name: install network tools (net-tools)
      apt:
        name: net-tools
        state: present
        force: yes

    - name: changing Docker to systemd driver
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
          "exec-opts": ["native.cgroupdriver=systemd"]
          }

    - name: install Docker
      apt:
        name: docker.io
        state: present
        update_cache: true

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: install kubelet
      apt:
        name: kubelet=1.22.4-00
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm=1.22.4-00
        state: present

- hosts: control_plane
  become: yes
  tasks:
    - name: install kubectl
      apt:
        name: kubectl=1.22.4-00
        state: present
        force: yes

    - name: initialize the cluster
      shell: kubeadm init --kubernetes-version 1.22.4 --pod-network-cidr=172.16.20.0/24 -v=5 >> cluster_initialized.txt
      become: yes
      become_user: root
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kube directory
      become: yes
      become_user: samcaldwell
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/samcaldwell/.kube/config
        remote_src: yes
        owner: samcaldwell

    - name: install Pod network
      become: yes
      become_user: samcaldwell
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt